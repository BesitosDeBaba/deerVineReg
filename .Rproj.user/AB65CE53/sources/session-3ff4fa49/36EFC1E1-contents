setwd('C:/Users/zaboo/OneDrive/Documentos/CIMAT/Tesis/codigo/Mio')

source('TBDs.R')
source('Funciones.R')
source('Graficas.R')
source('funPred.R')
source('heats.R')
source('efectos.R')

#A Q U I  E M P I E Z A
mujeres <- read.csv('Mujeres.csv')
hombres <- read.csv('Hombres.csv')

mujeres <- mujeres[-c(1)]
hombres <- hombres[-c(1)]
baseTotal <- read.csv('baseBrenda.csv')

source('PreparaBase.R')

#Genereamos la respuesta de la base completa
baseTotal$TBDglu= TBDfuncion(baseTotal[,6:10])[[1]]
baseTotal$TBDins= TBDfuncion(baseTotal[,12:16])[[1]]
baseTotal$FBIGC <- FBIGCgenera(baseTotal)

#Quitamos los que tiene NA en PA.diast

baseTotal <- subset(baseTotal, !is.na(baseTotal$PA.diast))
#---------------------------------------------------------------------
colnames(mujeres)
colnames(hombres)

formula <- FBIGC ~ BMI + Glu.0 + Glu.120 + PA.diast 

redMujeres <- separaVar(mujeres, formula)
redHombres <- separaVar(hombres, formula)
redTotal <- separaVar(baseTotal, formula)

#Visualizaciones importantes de correlciones
#Se sacan las matrices de correlacion por Genero
corrWolfH <- corSWEC(redHombres)
corrWolfM <- corSWEC(redMujeres)
corrWolf <- corSWEC(redTotal)

corrWolfH
corrWolfM
corrWolf

corrSpeaH <- corSpear(redHombres)
corrSpeaM <- corSpear(redMujeres)
corrSpeaT <- corSpear(redTotal)

difCorrH <- corrWolfH - abs(corrSpeaH)
difCorrM <- corrWolfM - abs(corrSpeaM)
difCorrT <- corrWolf - abs(corrSpeaT)

print(difCorrH)
print(difCorrM)
print(difCorrT)

breaks <- seq(-1, 1, by = 0.02)
pheatmap(difCorrH,
         display_numbers = TRUE, number_color = "black", 
         fontsize_number = 8, cluster_cols = FALSE, cluster_rows = FALSE, 
         breaks = breaks, main = 'Diferencia Hombres, sigma-|rho|')

pheatmap(difCorrM,
         display_numbers = TRUE, number_color = "black", 
         fontsize_number = 8, cluster_cols = FALSE, cluster_rows = FALSE, 
         breaks = breaks, main = 'Diferencia Mujeres, sigma-|rho|')

pheatmap(difCorrT,
         display_numbers = TRUE, number_color = "black", 
         fontsize_number = 8, cluster_cols = FALSE, cluster_rows = FALSE, 
         breaks = breaks, main = 'Diferencia Mujeres y Hombres, sigma-|rho|')

#----------- AQUI EMPIEZA --------------
#Escala normal
diagonalGraf(redMujeres)
diagonalGraf(redHombres)
diagonalGraf(redTotal)

#Escala U
Umujeres <- escalaU(redMujeres)
Uhombres <- escalaU(redHombres)
Utotal <- escalaU(redTotal)

diagonalGraf(Umujeres)
diagonalGraf(Uhombres)
diagonalGraf(Utotal)

empCopula(redMujeres[c(1, 2)])
#---------------------------------------------------
#P R U E B A  M U J E R E S 
constCop(formula, mujeres)
testCop(copulas_select)

#Guardas cosas más importantes
copulas_selectM <- copulas_select
h_selectM <- h_select

#grafInter(0.25, 0.75, mujeres$FBIGC, datosU)

diagonalGrafReg(Umujeres, h_selectM, copulas_selectM)

#Hacemos el semaforo
RegresionM = mujeres %>%
  group_by(diagnostico, BMIclas) %>%
  summarise(FBIGC = median(FBIGC),
            Glu.0 = median(Glu.0),
            Glu.120= median(Glu.120),
            BMI=median(BMI),
            PA.diast = median(PA.diast),
            n = n())

#"FBIGC"   "Glu.120" "Glu.0"   "BMI" "PA.diast",  El orden Predicho
dataReg <- as.data.frame(RegresionM[c('FBIGC', 'Glu.120', 'Glu.0', 'BMI', 'PA.diast')])
Pred25 <- regresionPred(mujeres, dataReg, mujeres$FBIGC, 0.25, copulas_selectM)
Pred50 <- regresionPred(mujeres, dataReg, mujeres$FBIGC, 0.50, copulas_selectM)
Pred75 <- regresionPred(mujeres, dataReg, mujeres$FBIGC, 0.75, copulas_selectM)

dataReg$Cat <- paste(RegresionM$diagnostico, RegresionM$BMIclas, sep = " ")
dataReg$Pred25 <- Pred25
dataReg$Pred50 <- Pred50
dataReg$Pred75 <- Pred75

dataReg$Cat <- as.factor(dataReg$Cat)
dataReg$Cat <- factor(dataReg$Cat, 
                      levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                                 "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                                 "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

df <- dataReg[c(6:9)] %>% pivot_longer(!Cat, names_to = "Regresion", values_to = "valores")

ggplot(df, aes(x= Cat, y = valores, color= Regresion, shape = Regresion)) +
  geom_point(size = 4) + ggtitle('Intervalos del FBI/GC (25%, 50%, 75%) para Mujeres') +
  scale_colour_manual(values = c("green", "blue", "red")) +
  geom_hline(yintercept = c(0,-1,-2),size=1,linetype = "dashed") + theme_minimal()+
  ylab('FBI/GC') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

alleffect(redMujeres, y = 'FBIGC', copulas = copulas_selectM, 
          id = 'Muj', alphas = c(0.1, 0.5, 0.9))

levelsVine(4, Umujeres, copulas_selectM, h_selectM, 'Muj')
#----------- T A B L A  D E  P R O B A B I L I D A D E S --------------
dataReg$P0=NA
dataReg$Pm1=NA
dataReg$Pm2=NA

cortes=0:(-2)
CORTES=list()

for (lev in 1:nrow(dataReg)){
  aux <- c()
  i <- 1
  
  for (corte in cortes){
    funcionAux <- function(alpha){
      datos <- mujeres; obser <- dataReg[lev, c(1:5)]
      y_real <- mujeres$FBIGC
      regresionSemaforo(datos, obser, corte, y_real, alpha, copulas_selectM)
    }
    aux[i] <- uniroot(funcionAux, c(0,1))$root
    i <- i + 1
  }
  
  dataReg[lev, 10:12] <- t(as.matrix(aux,nrow=1,ncol=4))
}


dataReg$C1 <- 1- dataReg$P0
dataReg$C2 <- dataReg$P0 - dataReg$Pm1
dataReg$C3 <- dataReg$Pm1 - dataReg$Pm2
dataReg$C4 <- 1-(dataReg$C1 + dataReg$C2 + dataReg$C3)

colnames(dataReg)

vis <- dataReg[,c(6, 13:16)] %>% pivot_longer(!Cat, names_to = "Probas", values_to = "valores")
vis$Cat <- as.factor(vis$Cat)
vis$Cat <- factor(vis$Cat, 
                  levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                             "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                             "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

ggplot(vis, aes(fill=Probas, y= round(valores, 2), x = Cat)) + ylim(1, 0) +
  geom_bar(position="fill", stat="identity") + ylab('Probabilidad') +
  scale_fill_manual(values = c('green', 'yellow', 'orange', 'red')) +
  theme(legend.position="bottom") +
  geom_text(aes(label = paste(round(valores, 2)*100, '%')), size = 3, position = position_stack(vjust = 0.5)) +
  xlab('Clasificación') + 
  ggtitle('Probabilidad de cada clase de acuerdo al BMI y niveles de Glucosa en Mujeres') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + coord_flip() + scale_x_discrete(limits=rev)

dataReg <- as.data.frame(dataReg)
resultadosM <- cbind(dataReg[, 1:6], RegresionM['n'], dataReg[, 7:ncol(dataReg)])

write.csv(resultadosM, '4varMuj.csv')
#---------------------------------------------------
#P R U E B A  H O M B R E S 
constCop(formula, hombres)
testCop(copulas_select)

#Guardas cosas más importantes
copulas_selectH <- copulas_select
h_selectH <- h_select

grafInter(0.25, 0.75, hombres$FBIGC, datosU)

diagonalGrafReg(Uhombres, h_selectH, copulas_selectH)

#Hacemos el semaforo
RegresionH = hombres %>%
  group_by(diagnostico, BMIclas) %>%
  summarise(FBIGC = median(FBIGC),
            Glu.0 = median(Glu.0),
            Glu.120= median(Glu.120),
            BMI=median(BMI),
            PA.diast = median(PA.diast),
            n = n())

# EL orden "FBIGC"   "Glu.120" "Glu.0"   "BMI"
dataRegH <- as.data.frame(RegresionH[c('FBIGC', 'Glu.120', 'Glu.0', 'BMI', 'PA.diast')])
Pred25 <- regresionPred(hombres, dataRegH, hombres$FBIGC, 0.25, copulas_selectH)
Pred50 <- regresionPred(hombres, dataRegH, hombres$FBIGC, 0.50, copulas_selectH)
Pred75 <- regresionPred(hombres, dataRegH, hombres$FBIGC, 0.75, copulas_selectH)

dataRegH$Cat <- paste(RegresionH$diagnostico, RegresionH$BMIclas, sep = " ")
dataRegH$Pred25 <- Pred25
dataRegH$Pred50 <- Pred50
dataRegH$Pred75 <- Pred75

dataRegH$Cat <- as.factor(dataRegH$Cat)
dataRegH$Cat <- factor(dataRegH$Cat, 
                       levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                                  "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                                  "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

dfH <- dataRegH[c(6:9)] %>% pivot_longer(!Cat, names_to = "Regresion", values_to = "valores")

ggplot(dfH, aes(x= Cat, y = valores, color= Regresion, shape = Regresion)) +
  geom_point(size = 4) + ggtitle('Intervalos del FBI/GC (25%, 50%, 75%) para Hombres') +
  scale_colour_manual(values = c("green", "blue", "red")) +
  geom_hline(yintercept = c(0,-1,-2),size=1,linetype = "dashed") + theme_minimal()+
  ylab('FBI/GC') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

alleffect(redHombres, y = 'FBIGC', copulas = copulas_selectH, 
          id = 'Hom', alphas = c(0.1, 0.5, 0.9))

levelsVine(5, Uhombres, copulas_selectH, h_selectH, 'Hom')
#----------- T A B L A  D E  P R O B A B I L I D A D E S --------------
dataRegH$P0=NA
dataRegH$Pm1=NA
dataRegH$Pm2=NA


cortes=0:(-2)
CORTES=list()

for (lev in 1:nrow(dataRegH)){
  aux <- c()
  i <- 1
  
  for (corte in cortes){
    funcionAux <- function(alpha){
      datos <- hombres; obser <- dataRegH[lev, c(1:5)]
      y_real <- hombres$FBIGC
      regresionSemaforo(datos, obser, corte, y_real, alpha, copulas_selectH)
    }
    aux[i] <- uniroot(funcionAux, c(0,1))$root
    i <- i + 1
  }
  
  dataRegH[lev, 10:12] <- t(as.matrix(aux,nrow=1,ncol=4))
}

dataRegH$C1 <- 1- dataRegH$P0
dataRegH$C2 <- dataRegH$P0 - dataRegH$Pm1
dataRegH$C3 <- dataRegH$Pm1 - dataRegH$Pm2
dataRegH$C4 <- 1-(dataRegH$C1 + dataRegH$C2 + dataRegH$C3)

colnames(dataRegH)

visH <- dataRegH[,c(6, 13:16)] %>% pivot_longer(!Cat, names_to = "Probas", values_to = "valores")
visH$Cat <- as.factor(visH$Cat)
visH$Cat <- factor(visH$Cat, 
                   levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                              "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                              "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

ggplot(visH, aes(fill=Probas, y= round(valores, 2), x = Cat)) + ylim(1, 0) +
  geom_bar(position="fill", stat="identity") + ylab('Probabilidad') +
  scale_fill_manual(values = c('green', 'yellow', 'orange', 'red')) +
  theme(legend.position="bottom") +
  geom_text(aes(label = paste(round(valores, 2)*100, '%')), size = 3, position = position_stack(vjust = 0.5)) +
  xlab('Clasificación') + 
  ggtitle('Probabilidad de cada clase de acuerdo al BMI y niveles de Glucosa en Hombres') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + coord_flip() + scale_x_discrete(limits=rev)

dataRegH <- as.data.frame(dataRegH)
resultadosH <- cbind(dataRegH[, 1:6], RegresionH['n'], dataRegH[, 7:ncol(dataRegH)])

write.csv(resultadosH, '4varHom.csv')

#---------------------------------------------------
#P R U E B A  B A S E  C O M P L E T A 

constCop(formula, baseTotal)
testCop(copulas_select)

#Guardas cosas más importantes
copulas_selectT <- copulas_select
h_selectT <- h_select

grafInter(0.25, 0.75, baseTotal$FBIGC, datosU)

diagonalGrafReg(Utotal, h_selectT, copulas_selectT)

#Hacemos el semaforo
RegresionT = baseTotal %>%
  group_by(diagnostico, BMIclas) %>%
  summarise(FBIGC = median(FBIGC),
            Glu.0 = median(Glu.0),
            Glu.120= median(Glu.120),
            BMI=median(BMI),
            PA.diast = median(PA.diast),
            n = n())

# EL orden "FBIGC"   "Glu.120" "Glu.0"   "BMI"
dataRegT <- as.data.frame(RegresionT[c('FBIGC', 'Glu.120', 'Glu.0', 'BMI', 'PA.diast')])
Pred25 <- regresionPred(baseTotal, dataRegT, baseTotal$FBIGC, 0.25, copulas_selectT)
Pred50 <- regresionPred(baseTotal, dataRegT, baseTotal$FBIGC, 0.50, copulas_selectT)
Pred75 <- regresionPred(baseTotal, dataRegT, baseTotal$FBIGC, 0.75, copulas_selectT)

dataRegT$Cat <- paste(RegresionT$diagnostico, RegresionT$BMIclas, sep = " ")
dataRegT$Pred25 <- Pred25
dataRegT$Pred50 <- Pred50
dataRegT$Pred75 <- Pred75

dataRegT$Cat <- as.factor(dataRegT$Cat)
dataRegT$Cat <- factor(dataRegT$Cat, 
                       levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                                  "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                                  "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

dfT <- dataRegT[c(6:9)] %>% pivot_longer(!Cat, names_to = "Regresion", values_to = "valores")

ggplot(dfT, aes(x= Cat, y = valores, color= Regresion, shape = Regresion)) +
  geom_point(size = 4) + ggtitle('Intervalos del FBI/GC (25%, 50%, 75%) para Hombres y Mujeres') +
  scale_colour_manual(values = c("green", "blue", "red")) +
  geom_hline(yintercept = c(0,-1,-2),size=1,linetype = "dashed") + theme_minimal()+
  ylab('FBI/GC') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

alleffect(redTotal, y = 'FBIGC', copulas = copulas_selectT, 
          id = 'Total', alphas = c(0.1, 0.5, 0.9))

levelsVine(5, Utotal, copulas_selectT, h_selectT, 'Total')

#----------- T A B L A  D E  P R O B A B I L I D A D E S --------------
dataRegT$P0=NA
dataRegT$Pm1=NA
dataRegT$Pm2=NA

cortes=0:(-2)
CORTES=list()

for (lev in 1:nrow(dataRegT)){
  aux <- c()
  i <- 1
  
  for (corte in cortes){
    funcionAux <- function(alpha){
      datos <- baseTotal; obser <- dataRegT[lev, c(1:5)]
      y_real <- baseTotal$FBIGC
      regresionSemaforo(datos, obser, corte, y_real, alpha, copulas_selectT)
    }
    aux[i] <- uniroot(funcionAux, c(0,1))$root
    i <- i + 1
  }
  
  dataRegT[lev, 10:12] <- t(as.matrix(aux,nrow=1,ncol=4))
}

dataRegT$C1 <- 1- dataRegT$P0
dataRegT$C2 <- dataRegT$P0 - dataRegT$Pm1
dataRegT$C3 <- dataRegT$Pm1 - dataRegT$Pm2
dataRegT$C4 <- 1-(dataRegT$C1 + dataRegT$C2 + dataRegT$C3)

colnames(dataRegT)

visT <- dataRegT[,c(6, 13:16)] %>% pivot_longer(!Cat, names_to = "Probas", values_to = "valores")
visT$Cat <- as.factor(visT$Cat)
visT$Cat <- factor(visT$Cat, 
                   levels = c("Normal Peso Normal", "Normal Sobrepeso", "Normal Obesidad",
                              "Prediabetes Peso Normal", "Prediabetes Sobrepeso", "Prediabetes Obesidad",   
                              "Diabetes Peso Normal", "Diabetes Sobrepeso", "Diabetes Obesidad"))

ggplot(visT, aes(fill=Probas, y= round(valores, 2), x = Cat)) + ylim(1, 0) +
  geom_bar(position="fill", stat="identity") + ylab('Probabilidad') +
  scale_fill_manual(values = c('green', 'yellow', 'orange', 'red')) +
  theme(legend.position="bottom") +
  geom_text(aes(label = paste(round(valores, 2)*100, '%')), size = 3, position = position_stack(vjust = 0.5)) +
  xlab('Clasificación') + 
  ggtitle('Probabilidad de cada clase de acuerdo al BMI y niveles de Glucosa en Hombres y Mujeres') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + coord_flip() + scale_x_discrete(limits=rev)

dataRegT <- as.data.frame(dataRegT)
resultadosT <- cbind(dataRegT[, 1:6], RegresionT['n'], dataRegT[, 7:ncol(dataRegT)])

write.csv(resultadosT, '4varTotal.csv')

#_________________________________________________
#                   HEATMAPS                    
#_________________________________________________
setwd('C:/Users/zaboo/OneDrive/Documentos/CIMAT/Tesis/codigo/Mio/4variables/heatmaps')

heatReg(5, Umujeres, h_selectM, 'Muj')
heatReg(5, Uhombres, h_selectH, 'Hom')
heatReg(5, Utotal, h_selectT, 'Total')

save.image('4variables.Rdata')
